@using ZauberCMS.Core.Media.Models
@using ZauberCMS.Core
@using ZauberCMS.Core.Media.Commands
@layout SectionLayout
@page "/admin/listmedia/{FolderId:guid}"

<PageTitle>Listing Media</PageTitle>

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Reverse="true" Gap="5" Style="margin-top: -5px; padding-top: 0; padding-bottom: 10px;">
    <CreateMedia ParentId="FolderId" />
</RadzenStack>

<RadzenDataGrid AllowFiltering="false"
                FilterPopupRenderMode="PopupRenderMode.OnDemand"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                AllowPaging="false"
                PageSize="20"
                AllowSorting="true"
                Data="@Contents"
                SelectionMode="DataGridSelectionMode.Single"
                RowSelect="@((Media value) => OnRowSelect(value))">
    <Columns>
        <RadzenDataGridColumn Property="Name" Title="Name"/>
        <RadzenDataGridColumn Property="DateUpdated" Title="Last Updated">
            <Template Context="data">
                @data.DateUpdated.Humanize()
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    [CascadingParameter] protected SectionLayout? Layout { get; set; }

    [Parameter] public Guid FolderId { get; set; }
    
    private IEnumerable<Media> Contents { get; set; } = [];

    protected override async Task OnParametersSetAsync()
    {
        await SetContents(FolderId);
    }

    protected override void OnInitialized()
    {
        Layout?.SetSection(Constants.Sections.MediaSection);
    }

    private async Task SetContents(Guid folderId)
    {
        var items = await Mediator.Send(new QueryMediaCommand
        {
            AmountPerPage = 100,
            OrderBy = GetMediaOrderBy.Name,
            WhereClause = media => media.ParentId == folderId
        });
        
        Contents = items.Items;
    }
    
    private void OnRowSelect(object value)
    {
        if (value is Media { MediaType: MediaType.Folder } folder)
        {
            NavigationManager.NavigateTo($"/admin/listmedia/{folder.Id}");
        }
        else if (value is Media media)
        {
            NavigationManager.NavigateTo($"/admin/updatemedia/{media.Id}");
        }
    }
}