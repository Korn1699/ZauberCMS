@using ZauberCMS.Core.Settings
@using Microsoft.Extensions.Options
@implements ZauberCMS.Core.Content.Interfaces.IContentProperty

<RadzenDropDown TValue="string" Value="@Value" Data="@ApiKeys" Change="@(args => OnValueChanged(args))" TextProperty="Key" ValueProperty="Value" Style="width: 100%;" />

@code {
    public string Name => "Api Key Picker";
    public string Alias => "ZauberCMS.ApiKeyPicker";
    public string Description => "Pick your API keys by name from the appSettings";
    public string Icon => "api";
    public Type? SettingsComponent { get; set; }
    
    [Parameter] public string? Value { get; set; }
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string? Settings { get; set; }
    [Parameter] public Content? Content { get; set; }
    [CascadingParameter] public IModalService? ModalService { get; set; }

    [Inject] public IOptions<ZauberSettings> ZauberSettings { get; set; } = default!;
    
    private Dictionary<string, string> ApiKeys { get; set; } = [];

    protected override void OnInitialized()
    {
        ApiKeys = ZauberSettings.Value.ApiKeys;
    }
    
    private async Task OnValueChanged(object value)
    {
        if (value is string apiKey)
        {
            Value = apiKey;
            await ValueChanged.InvokeAsync(Value);   
        }
    }

}