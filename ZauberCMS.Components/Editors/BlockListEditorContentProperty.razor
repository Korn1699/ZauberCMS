@using ZauberCMS.Core.Content.Models
@implements ZauberCMS.Core.Content.Interfaces.IContentProperty

<RadzenStack Orientation="Orientation.Vertical" Gap="1rem" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">
    @foreach (var content in ContentItems)
    {
        <RadzenCard class="p-5 rz-background-color-base-200 rz-text-align-center" Style="height: 100px; width: 100%;">
            @content.Name
        </RadzenCard>
    }
    <RadzenButton Click="@(() => AddContent())">Add Content</RadzenButton>
</RadzenStack>

@code {
    public string Name { get; set; } = "Block List Editor";
    public string Alias { get; set; } = "ZauberCMS.BlockListEditor";
    public string Description { get; set; } = "Creates a list of content blocks";
    public string Icon { get; set; } = "format_align_justify";
    public Type? SettingsComponent { get; set; }

    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public string Settings { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public Content? Content { get; set; }

    [Inject] public DialogService DialogService { get; set; } = default!;

    private List<Content> ContentItems { get; set; } = [];

    private async Task AddContent()
    {
        var result = await DialogService.OpenSideAsync<ContentEditor>("Add Content",
            new Dictionary<string, object> { { "IsBlockList", true }, { "ContentChangedCallback", EventCallback.Factory.Create<Content>(this, OnContentChanged) } },
            new SideDialogOptions { CloseDialogOnOverlayClick = true, Position = DialogPosition.Right, ShowMask = true });
    }

    private void OnContentChanged(Content newContent)
    {
        // This could be an issue and close dialogs on property editors!
        DialogService.CloseSide();
        ContentItems.Add(newContent);
    }

}