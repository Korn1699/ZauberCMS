@using Radzen
@using Radzen.Blazor
@using ZauberCMS.Core.Extensions

<RadzenTextBox Placeholder="Search Icons..." Value="@SearchTerm" ValueChanged="@((string value) => Search(value))" @oninput="@(e => Search(e.Value?.ToString()))" class="w-100 rz-mb-3" aria-label="Search Icons"/>
<RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
    @foreach (var icon in FilteredIcons)
    {
        <RadzenStack Style="border: 1px #e1e1e1 solid; border-radius: 2px; text-align: center; width: 100px; height: 100px; cursor: pointer;"
                     Orientation="Orientation.Vertical" Gap="0" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center" @onclick="@(() => SelectIcon(icon))">
            <RadzenIcon Icon="@icon" Style="width: 50px; height: 50px; font-size: 50px; color: #2c3034;" />
            <div class="rz-color-base-400" style="font-size: 9px">
                @icon
            </div>
            
        </RadzenStack>
    }
</RadzenStack>

@code {
    [Inject] public DialogService DialogService { get; set; } = default!;

    private List<string> Icons { get; set; } = [];
    private List<string> FilteredIcons { get; set; } = [];
    private string? SearchTerm { get; set; }

    protected override void OnInitialized()
    {
        var iconsFilePath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "files", "materialicons.txt");
        if (File.Exists(iconsFilePath))
        {
            Icons = File.ReadLines(iconsFilePath).ToList();
            FilteredIcons = Icons;
        }
    }

    private void Search(string? search)
    {
        if (!search.IsNullOrWhiteSpace())
        {
            FilteredIcons = Icons.Where(x => x.StartsWith(search)).ToList();   
        }
    }
    
    private void SelectIcon(string icon)
    {
        DialogService.CloseSide(icon);
    }
}