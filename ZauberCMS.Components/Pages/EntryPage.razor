@using Microsoft.Extensions.Options
@using ZauberCMS.Core.Content.Commands
@using ZauberCMS.Core.Content.Interfaces
@using ZauberCMS.Core.Plugins
@using ZauberCMS.Core.Settings
@using ZauberCMS.Core.Shared.Services

@if (ComponentView != null)
{
    <LayoutView Layout="LayoutType">
        <DynamicComponent Type="@ComponentView.GetType()" Parameters="@Parameters" />
    </LayoutView>
}

@code {
    
    [Inject] public ExtensionManager ExtensionManager { get; set; } = default!;
    [Inject] public LayoutResolverService LayoutResolver { get; set; } = default!;
    [Inject] public IOptions<ZauberSettings> Settings { get; set; } = default!;
    
    [Parameter] public string? Slug { get; set; }
    
    private Content? Content { get; set; }
    private Dictionary<string, IContentView> AllContentViews { get; set; } = new();
    private IContentView? ComponentView { get; set; }
    private Dictionary<string, object> Parameters { get; set; } = new();
    private Type LayoutType { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        AllContentViews = ExtensionManager.GetInstances<IContentView>(true);
        Content = await Mediator.Send(new GetContentBySlugCommand { Slug = Slug, IsRootContent = Slug == null });
        
        if (Content != null)
        {
            //Found content, now find the view to display it
            if (AllContentViews.TryGetValue(Content.ViewComponent, out var contentView))
            {
                ComponentView = contentView;
                LayoutType = LayoutResolver.GetLayoutType(ComponentView.GetType());
                Parameters = new Dictionary<string, object> { ["Content"] = Content };
            }
            else
            {
                // No view selected, let the user know
                if(AllContentViews.TryGetValue(Settings.Value.MissingView!, out var missing))
                {
                    ComponentView = missing;
                    LayoutType = LayoutResolver.GetLayoutType(ComponentView.GetType());
                    Parameters = new Dictionary<string, object> { ["Content"] = Content };
                }
            }
        }
        else 
        {
            // No content (404) Show not found component
            if(AllContentViews.TryGetValue(Settings.Value.NotFoundComponent!, out var notFound))
            {
                ComponentView = notFound;
                LayoutType = LayoutResolver.GetLayoutType(ComponentView.GetType());
            }
        }
    }
    
}