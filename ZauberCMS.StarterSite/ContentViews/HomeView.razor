@using ZauberCMS.Core.Content.Commands
@using ZauberCMS.StarterSite.Layouts
@implements ZauberCMS.Core.Content.Interfaces.IContentView
@* This is the layout you want to use *@
@layout MainLayout

@* This is where you set Head/Meta information *@
<PageTitle>@(Content!.GetValue<string>("PageTitle") ?? Content!.GetValue<string>("Heading"))</PageTitle>
<SectionContent SectionId="MainLayout.Sections.PageHeadContent">
    <meta name="description" content="@(Content!.GetValue<string>("MetaDescription"))">
</SectionContent>

@* 
    All properties are available through Content.GetValue<string>("") if your value is saved as a type
    then you can call Content.GetValue<MyType>("")
*@

<header class="masthead" style="background-image: url('_content/ZauberCMS.StarterSite/assets/img/home-bg.jpg')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>@(Content!.GetValue<string>("Heading"))</h1>
                    <span class="subheading">A Blog Theme by Start Bootstrap</span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container px-4 px-lg-5">

    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">

            @((MarkupString)(Content!.GetValue<string>("Content") ?? string.Empty))

            @foreach (var post in BlogPosts)
            {
                <BlogPostPreview Content="@post"/>
                <hr class="my-4"/>
            }

            @*<div class="d-flex justify-content-end mb-4"><a class="btn btn-primary text-uppercase" href="#!">Older Posts →</a></div>*@
        </div>
    </div>
</div>

@code {

    @* This is the content page passed in that matches the url *@
    [Parameter] public Content? Content { get; set; }
    private IEnumerable<Content> BlogPosts { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        // Get the blog posts
        var posts = await Mediator.Send(new QueryContentCommand
        {
            AmountPerPage = 4,
            ContentTypeAlias = "BlogPage",
            OrderBy = GetContentsOrderBy.DateUpdatedDescending
        });

        BlogPosts = posts.Items;
    }

}