@page "/content"
@page "/admin"
@using ZauberCMS.Core.Content.Commands
@layout AdminLayout

<PageTitle>Content</PageTitle>

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Reverse="true" Gap="5" Style="margin-top: 0; padding-top: 0; padding-bottom: 10px;">
    <RadzenButton Variant="Variant.Filled" Text="Create Content" Click=@(args => NavigationManager.NavigateTo("/createcontent"))/>
</RadzenStack>

<RadzenDataGrid AllowFiltering="false"
                FilterPopupRenderMode="PopupRenderMode.OnDemand"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                AllowPaging="false"
                PageSize="20"
                AllowSorting="true"
                Data="@Contents"
                SelectionMode="DataGridSelectionMode.Single"
                RowSelect="@((ZauberCMS.Core.Content.Models.Content value) => OnRowSelect(value))">
    @*@bind-Value="@SelectedContent"*@
    <Columns>
        <RadzenDataGridColumn Property="Name" Title="Name"/>
        <RadzenDataGridColumn Property="DateUpdated" Title="Last Updated">
            <Template Context="data">
                @data.DateUpdated.Humanize()
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<SectionContent SectionId="AdminLayout.Sections.HeaderBeginning">
    <RadzenSidebarToggle Click="@(() => ToggleSideBar())"/>
</SectionContent>

<SectionContent SectionId="AdminLayout.Sections.SideBar">
    <RadzenSidebar @bind-Expanded="@Expanded">
        <ContentTree/>
    </RadzenSidebar>
</SectionContent>

@code {
    private IEnumerable<Core.Content.Models.Content> Contents { get; set; } = Enumerable.Empty<Core.Content.Models.Content>();
    private bool Expanded { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var items = await Mediator.Send(new GetContentsCommand
        {
            AmountPerPage = 20,
            OrderBy = GetContentsOrderBy.DateUpdatedDescending
        });
        Contents = items.Items;
    }

    private void OnRowSelect(object value)
    {
        if (value is Core.Content.Models.Content selectedRow)
        {
            NavigationManager.NavigateTo($"/updatecontent/{selectedRow.Id}");
        }
    }

    private void ToggleSideBar()
    {
        Expanded = !Expanded;
    }
}