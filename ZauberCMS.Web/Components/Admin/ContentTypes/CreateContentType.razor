@page "/createcontentype"
@using ZauberCMS.Core.Content.Interfaces
@layout AdminLayout

<PageTitle>Create Content Type</PageTitle>

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Reverse="true" Gap="5" Style="margin-top: -5px; padding-top: 0; padding-bottom: 10px;">
    <RadzenButton Variant="Variant.Filled" Text="Add Content Property" Click="@(AddProperty)"/>
</RadzenStack>


@foreach (var property in ContentType.ContentProperties)
{
    <div></div>
    <p>@property.ComponentType @property.SortOrder</p>
}

<SectionContent SectionId="AdminLayout.Sections.Footer">
    <RadzenFooter>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Reverse="true" Gap="5">
            <RadzenButton Variant="Variant.Filled" Text="Save" Click="@(Save)"/>
        </RadzenStack>
    </RadzenFooter>
</SectionContent>

@code {
    [Inject] public NavigationManager NavigationManager { get; set; } = default!;
    [Inject] public DialogService DialogService { get; set; } = default!;
    [Inject] public NotificationService NotificationService { get; set; } = default!;

    private ContentType ContentType { get; set; } = new();

    private void Save()
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Success Summary", Detail = "Success Detail", Duration = 4000 });
    }
    
    // TODO - Remove Property
    
    // TODO - Save

    private async Task AddProperty()
    {
        var result = await DialogService.OpenSideAsync<ListContentTypeProperties>("Add Property",
            new Dictionary<string, object>(),
            new SideDialogOptions { CloseDialogOnOverlayClick = true, Position = DialogPosition.Right, ShowMask = true });

        if (result is IContentProperty property)
        {
            ContentType.ContentProperties.Add(new ContentTypeProperty
            {
                ComponentType = property.GetType().FullName ?? string.Empty,
                SortOrder = ContentType.ContentProperties.Count + 1
            });
            StateHasChanged();
        }
    }
}