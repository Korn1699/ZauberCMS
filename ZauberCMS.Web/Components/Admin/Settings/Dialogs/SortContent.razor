@page "/SortContent/{ContentId:guid}"

<h6 @onclick="@(Sort)" style="cursor: pointer;">Name</h6>
<RadzenStack Orientation="Orientation.Vertical" Gap="1" JustifyContent="JustifyContent.Center">
    @foreach (var content in Content)
    {
    <div>@content.Name</div>
    }    
</RadzenStack>
<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Right" AlignItems="AlignItems.Center" class="rz-mt-3">
    <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Icon="save" Text="Save" Click="Save"/>
</RadzenStack>

@code {
    [Inject] public DialogService DialogService { get; set; } = default!;
    [Parameter] public Guid ContentId { get; set; }
    [Parameter] public List<Content> Content { get; set; } = [];
    bool _isDescending = false;
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private void Sort()
    {
        if (_isDescending)
        {
            _isDescending = false;
            Content = Content.OrderBy(x => x.Name).ToList();
        }
        else
        {
            _isDescending = true;
            Content = Content.OrderByDescending(x => x.Name).ToList();
        }
    }
    
    private void Save()
    {
        @for (var i = 0; i < Content.Count; i++)
        {
            var content = Content[i];
            content.SortOrder = i + 1;
        }

        // TODO - Save sorted items here
        
        DialogService.CloseSide(Content);
    }
}