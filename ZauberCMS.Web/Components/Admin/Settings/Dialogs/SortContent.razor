@page "/SortContent/{ContentId:guid}"

<RadzenDataGrid @ref="Grid" AllowPaging="false" AllowSorting="true" Data="@Content">
    <Columns>
        <RadzenDataGridColumn Property="Name" Title="Name" />
    </Columns>
</RadzenDataGrid>
<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Right" AlignItems="AlignItems.Center" class="rz-mt-3">
    <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Icon="save" Text="Save" Click="Save"/>
</RadzenStack>

@code {
    [Inject] public DialogService DialogService { get; set; } = default!;
    [Parameter] public Guid ContentId { get; set; }
    [Parameter] public List<Content> Content { get; set; } = [];
    private RadzenDataGrid<Content> Grid { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private void Sort(DataGridColumnSortEventArgs<Content> eventArgs)
    {
        var t = eventArgs.Column;
    }
    
    private void Save()
    {
        var sortedContent = Grid.Data.ToList();
        @for (var i = 0; i < sortedContent.Count; i++)
        {
            var content = sortedContent[i];
            content.SortOrder = i + 1;
        }

        // TODO - Save sorted items here
        
        DialogService.CloseSide(true);
    }
}