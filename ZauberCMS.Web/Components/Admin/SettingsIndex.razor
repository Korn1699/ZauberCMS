@page "/settings"
@using ZauberCMS.Core.Data

@layout AdminLayout

<PageTitle>Settings</PageTitle>

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Reverse="true" Gap="5" Style="margin-top: -5px; padding-top: 0; padding-bottom: 10px;">
    <RadzenButton Variant="Variant.Filled" Text="Create" Click=@(args => NavigationManager.NavigateTo("/createcontentype"))/>
</RadzenStack>

<RadzenDataGrid AllowFiltering="true"
                FilterPopupRenderMode="PopupRenderMode.OnDemand"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                AllowPaging="true"
                PageSize="20"
                AllowSorting="true"
                Data="@ContentTypes"
                SelectionMode="DataGridSelectionMode.Single"
                RowSelect="@((ContentType value) => OnRowSelect(value))">
    <Columns>
        <RadzenDataGridColumn Property="Name" Title="Name"/>
        <RadzenDataGridColumn Property="DateUpdated" Title="Last Updated">
            <Template Context="data">
                @data.DateUpdated.Humanize()
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<SectionContent SectionId="AdminLayout.Sections.HeaderBeginning">
    <RadzenSidebarToggle Click="@(() => ToggleSideBar())" />
</SectionContent>

<SectionContent SectionId="AdminLayout.Sections.SideBar">
    <RadzenSidebar @bind-Expanded="@Expanded">
        <SettingsTree />
    </RadzenSidebar>
</SectionContent>

@code {
    [Inject] public ZauberDbContext DbContext { get; set; } = default!;

    private IEnumerable<ContentType> ContentTypes { get; set; } = Enumerable.Empty<ContentType>();
    private bool Expanded { get; set; } = true;
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        ContentTypes = DbContext.ContentTypes;
    }
    
    public void ToggleSideBar()
    {
        Expanded = !Expanded;
    }
    
    private void OnRowSelect(object value)
    {
        if (value is ContentType selectedRow)
        {
            NavigationManager.NavigateTo($"/updatecontentype/{selectedRow.Id}");
        }
    }
}