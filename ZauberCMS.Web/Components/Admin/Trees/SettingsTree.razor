@using ZauberCMS.Core
@using ZauberCMS.Core.Content.Commands

@implements ZauberCMS.Core.Sections.Interfaces.ISectionNav

<div class="rz-pb-4">
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Content Types</RadzenText>
</div>
<RadzenTree Data="@ContentTypes" Change="@OnChange" @bind-Value="@Selection">
    <RadzenTreeLevel Expanded="@(_ => false)" HasChildren="@(_ => false)" TextProperty="Name"/>
</RadzenTree>
<div class="rz-pb-4">
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Component Views</RadzenText>
    <p>TODO</p>
</div>
<div class="rz-pb-4">
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Languages</RadzenText>
    <p>TODO</p>
</div>

@code {
    
    public string Heading => "";
    public int SortOrder => 0;
    public string SectionAlias => Constants.Sections.SettingsSection;
    
    [Inject] public IServiceProvider ServiceProvider { get; set; } = default!;

    private List<ContentType> ContentTypes { get; set; } = [];
    private object? Selection { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var items = await Mediator.Send(new GetContentTypesCommand
        {
            OrderBy = GetContentTypesOrderBy.Name,
            AmountPerPage = 1000 // Probably should have a better way of doing this
        });
        ContentTypes = items.Items.ToList();
    }
    
    void OnChange()
    {
        if (Selection is ContentType contentType)
        {
            NavigationManager.NavigateTo($"/admin/updatecontentype/{contentType.Id}", forceLoad:true);
        }
    }

    public void Dispose()
    {
        
    }
}