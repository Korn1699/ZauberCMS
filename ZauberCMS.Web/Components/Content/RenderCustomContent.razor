@using ZauberCMS.Core.Content.Interfaces
@using ZauberCMS.Core.Plugins
@if (CustomContentComponents.Any())
{
    @foreach (var customComponentName in CustomComponents)
    {
        if (CustomContentComponents.TryGetValue(customComponentName, out var customContentComponent))
        {
            var customComponentType = customContentComponent.GetType();
            @if (customComponentType != null)
            {
                <CascadingValue Value="this">
                    <DynamicComponent Type="@customComponentType" Parameters="@GetParameters()"/>
                </CascadingValue>   
            }
        }
    }
}

@code {
    [Inject] public ExtensionManager ExtensionManager { get; set; } = default!;
    
    [Parameter] public List<string> CustomComponents { get; set; } = [];
    [Parameter] public Content? Content { get; set; }
    
    Dictionary<string, ICustomContentComponent> CustomContentComponents { get; set; } = new();
    
    private Dictionary<string, object> GetParameters()
    {
        return new Dictionary<string, object>
        {
            ["Content"] = Content
        };
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CustomContentComponents = ExtensionManager.GetInstances<ICustomContentComponent>(true);
    }

}