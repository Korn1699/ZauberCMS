@attribute [StreamRendering]
@page "/"
@page "/{**slug}"
@using ZauberCMS.Core.Content.Commands
@using ZauberCMS.Core.Content.Interfaces
@using ZauberCMS.Core.Plugins

@if (Content != null)
{
    if(ComponentView != null)
    {
        <DynamicComponent Type="@ComponentView.GetType()" Parameters="@Parameters" />   
    }
    else
    {
        <p>It looks like you haven't selected a Component View, or the Component View has been deleted.</p>
        <p>This needs to be a component too with a 302 status?</p>
    }
}
else
{
    <p>Whooops, we can't find that page!</p>
    <p>This needs to be a component that returns a 404 status code</p>
}

@code {
    
    [Inject] public ExtensionManager ExtensionManager { get; set; } = default!;
    
    [Parameter] public string? Slug { get; set; }
    
    private Content? Content { get; set; }
    private Dictionary<string, IContentView> AllContentViews { get; set; } = new();
    private IContentView? ComponentView { get; set; }
    private Dictionary<string, object> Parameters { get; set; } = new();
    
    protected override async Task OnParametersSetAsync()
    {
        AllContentViews = ExtensionManager.GetInstances<IContentView>(true);
        // Do this on parameters set or page won't change
        Content = await Mediator.Send(new GetContentBySlugCommand { Slug = Slug, IsRootContent = Slug == null });
        if (Content != null)
        {
            if (AllContentViews.TryGetValue(Content.ViewComponent, out var contentView))
            {
                ComponentView = contentView;
            }
            Parameters = new Dictionary<string, object> { ["Content"] = Content };   
        }
    }
    
}